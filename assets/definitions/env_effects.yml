env_effects:
  - id: FIRE
    sizeIncrements: 8
    particle_systems:
      - id: smoke
        on_update: |
          local spread = math.clamp(0.12 + 0.36 * effect.size, 0.01, 2.0)
          for i = 1, 1 do
            local angle0 = math.random() * 2 * math.pi
            local radius = spread * math.clamp(math.random(), 0.0, 1.0)
            local p = system:emit()
            p.position = {
              x = effect.position.x + math.cos(angle0) * radius,
              y = effect.position.y + math.sin(angle0) * radius - 0.18 * effect.size
            }
            p.size = math.max(8.0 * effect.size * math.clamp(0.6 + 0.4 * math.random(), 0.3, 1.2), 1.0)
            p.lifetime = 1.2 + 0.8 * math.random()
            local speed = (0.8 + 0.6 * math.random()) * (0.6 + 0.6 * effect.size * effect.size)
            p.velocity = { x = (math.random() - 0.5) * 0.4, y = -speed - 0.2 * effect.size }
            local gray = 80 + math.floor(80 * math.random())
            p.color = { r = gray, g = gray, b = gray, a = 100 + math.random(0, 80) }
          end
      - id: flame
        on_create: |
          system:set_blend_mode('BLEND_ADDITIVE')
        on_update: |
          local spread = math.clamp(0.08 + 0.32 * effect.size, 0.01, 2.0)
          for i = 1, 2 do
            local angle0 = math.random() * 2 * math.pi
            local radius = spread * math.clamp(math.random(), 0.0, 1.0)
            local p = system:emit()
            p.position = {
              x = effect.position.x + math.cos(angle0) * radius,
              y = effect.position.y + math.sin(angle0) * radius
            }
            p.size = math.max(math.max(10.0 * effect.size, 1.0) * math.clamp(0.6 + 0.4 * math.random(), 0.3, 1.2), 1.0)
            p.lifetime = 0.5 + 0.3 * math.random()
            local speed = (1.0 + 0.5 * math.random()) * (0.5 + 0.5 * effect.size * effect.size)
            p.velocity = { x = math.sin((math.random() - 0.5) * 1.2 * effect.size) * speed, y = -speed }
            p.color = { r = 255, g = 140 + math.random(0, 50), b = 30 + math.random(0, 30), a = 180 + math.random(0, 60) }
          end
  - id: FOAM
    particle_systems:
      - id: foam
        on_create: |
          local spread = math.clamp(0.12 + 0.4 * effect.size, 0.01, 2.0)
          local n = 8
          for i = 1, n do
            local base_angle = 2 * math.pi * (i - 1) / n
            local harmonic = 0.22 * math.sin(i * 1.7)
            local jitter = (math.random() - 0.5) * 0.2
            local angle = base_angle + harmonic + jitter
            local t = (i - 1) / math.max(1, (n - 1))
            local radius = spread * (0.25 + 0.75 * (t ^ 0.7)) * 0.7
            local p = system:emit()
            p.position = { x = effect.position.x + math.cos(angle) * radius, y = effect.position.y + math.sin(angle) * radius }
            p.lifetime = -1
            p.size = math.max(6.0 * (0.6 + 0.8 * effect.size) * (0.85 + 0.5 * math.random()), 1.0)
            local gray = 210 + math.floor(30 * math.random())
            p.color = { r = gray, g = gray, b = gray, a = 200 + math.random(0, 30) }
          end
