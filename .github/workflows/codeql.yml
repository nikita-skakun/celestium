name: "CodeQL"

on:
  workflow_dispatch:
  pull_request:
    branches: ["*"]
    paths-ignore:
      - "**/*.md"
      - "**/*.txt"
  schedule:
    - cron: "0 0 * * 0"

jobs:
  analyze:
    name: Analyze C++
    runs-on: "ubuntu-latest"
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Remove out-of-date pre-installed Clang
        run: |
          set -e
          sudo apt remove --purge -y clang*
          sudo apt autoremove -y

      - name: Set up Nix
        run: |
          set -e
          sh <(curl -L https://nixos.org/nix/install) --no-daemon
          . /home/runner/.nix-profile/etc/profile.d/nix.sh

      - name: Download CodeQL CLI
        run: |
          set -e
          latest_version=$(curl -s https://api.github.com/repos/github/codeql-action/releases/latest | jq -r .tag_name)
          curl -L -o codeql-bundle.tar.gz https://github.com/github/codeql-action/releases/download/${latest_version}/codeql-bundle-linux64.tar.gz
          tar -xzf codeql-bundle.tar.gz
          ls -l codeql
          sudo mv codeql /usr/local/codeql
          sudo ln -s /usr/local/codeql/codeql /usr/local/bin/codeql
          codeql --version

      - name: Build and analyze project with CodeQL
        run: |
          set -e
          . /home/runner/.nix-profile/etc/profile.d/nix.sh
          nix-shell --run "
            mkdir -p build;
            cd build;
            cmake ..;
            codeql database create /tmp/codeql-db --language=cpp --command='make -j$(nproc)';
            codeql database analyze /tmp/codeql-db --format=sarif-latest --output=/tmp/codeql-results.sarif --threads=$(nproc)
          "

      - name: Upload CodeQL SARIF results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: /tmp/codeql-results.sarif
          category: "/language:c-cpp"
